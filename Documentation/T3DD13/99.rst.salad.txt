.. ==================================================
.. FOR YOUR INFORMATION 
.. --------------------------------------------------
.. -*- coding: utf-8 -*- with BOM.  ÄÖÜäöüß

.. include:: ../Includes.txt


  

The general procedure of the documentation process
==================================================

1. Start writing your documentation as normal text.
2. Feed your source files into some ReST processing tools
3. Have that tools produce the desired output like Html, Pdf, Json, ePub
   and so on.
   
.. Advantages: gets parsed and compiled, can be transformed,
   extendable
   
   
Some names and basics you should know
=====================================

- "DOCUTILS" is the name of the basic Python documentation package. 
  It contains the one and only ReST parser.
  Handles one file at a time.
  
- "Sphinx" is ...
  Handles a "documentation project" with a lot of ReST files.


  
How can I get started within five minutes?
==========================================

This is how:

1. Create a project at Github
2. Enter the data of your project here:
   https://notes.typo3.org/p/t3dd13-documentation-projects/
3. Add hook processing to your Github repository
4. Test your hook or do a push to Github
5. Find your documentation at http://docs.typo3.org/typo3cms/drafts/,
   http://docs.typo3.org/neos/drafts/ or http://docs.typo3.org/flow/drafts/.


Places of information
=====================

Learn from our existing documentation:
    http://docs.typo3.org

Wiki
    http://wiki.typo3.org/Rest

    
    

..  

    What infrastructure do we have?
    ===============================

    What resources do we have?
    ==========================
   
    TYPO3 documentation repositories

    * http://git.typo3.org 
    * Helper script  by Philipp Gampe to clone all documentation from git.typo3.org: https://github.com/pgampe/TYPO3-Documentation_clone
    * TYPO3-spezifische ReST Tools sind in: http://git.typo3.org/Documentation/RestTools.git 
    * 

   



    Online helpers: "Get The Docs" by Fabien Udriot

        * http://lists.typo3.org/pipermail/typo3-project-documentation/2012-December/004257.html
        * A service:

    http://docs.typo3.org/getthedocs/ 


        * From manual.sxw to ReST:
        * http://docs.typo3.org/getthedocs/service-convert.html 


        * From ReST to HTML:
    http://docs.typo3.org/getthedocs/service-render.html


        * https://git.typo3.org/Documentation/GetTheDocs.git 



    Online Resources

        * TYPO3 documentation Mailinglist:
    http://lists.typo3.org/cgi-bin/mailman/listinfo/typo3-project-documentation


        * One place where I work in the open:
    http://docs.typo3.org/~mbless/


        * http://docs.typo3.org/~mbless/2013-03-14-ReST-Workshop-Stuttgart/


        * About: Sphinx
    A project http://www.pocoo.org/projects/sphinx/#sphinx 
    by Georg Brandl http://www.pocoo.org/team/#georg-brandl
    at http://www.pocoo.org/


        * 
            * 




    About: Docutils
    David Goodger developed the reStructuredText format, created the Docutils, is the "Benevolent Dictator for Now (BDFN"
    http://docutils.sourceforge.net/
    http://docutils.sourceforge.net/rst.html
    http://docutils.sourceforge.net/README.html#quick-start
    http://docutils.sourceforge.net/docs/index.html

    http://docs.typo3.org/~mbless/DOCROOT_HTDOCS/World/Docutils/html/
    http://srv123.typo3.org/~mbless/DOCROOT_HTDOCS/World/Docutils/html/docutils-docs/user/rst/quickstart.html 
     


        * About: Python
    Guido van Rossum invented and created Python, is accepted by the Python community as the "Benevolent Dictator for Life (BDFL)"


        * About: PyPi and the "setuptools"


        * Motivation song: http://www.youtube.com/watch?v=oXo6G5mfmro 


        * 


    Local Installation

        * ...

    Server Installation

        * ...


    Verfahren: Understanding local rendering

        * Convert a local manual.sxw to ReST
        * For example http://docs.typo3.org/~mbless/2013-03-14-ReST-Workshop-Stuttgart/manual.sxw
        * Use GetTheDocs: http://docs.typo3.org/getthedocs/service-convert.html
        * Add makefiles: http://docs.typo3.org/~mbless/2013-03-14-ReST-Workshop-Stuttgart/_make.zip 
        * Render locally!
        * Inspect _not_versioned
        * See the result



    Verfahren: Related Topics ...

        * related: http://wiki.typo3.org/Contribution_Walkthrough_Tutorials 



    Missing

        * Documentation Contribution Manual (covering ReST)


    Writing ReST: Elemente der Syntax

        * Überschriften, Absätze, Listen, Tabellen, Bilder, ...: Wie macht man das?



    Notizen:

    :ref:`t3api:xliff`
    shift+ctrl v : evernote, einfügen ohne Formatierung
    http://de.slideshare.net/marco-huber/phpstorm-6-configuration-for-typo3


Tricky
======

Where Sphinx differs from Docutils

See ``other.py``::

    # register the standard rst class directive under a different name
    # only for backwards compatibility now
    directives.register_directive('cssclass', Class)
    # new standard name when default-domain with "class" is in effect
    directives.register_directive('rst-class', Class)

